import logging
import time
import cflib.crtp
import random

from cflib.crazyflie import Crazyflie
from cflib.utils.callbacks import Caller
from cflib.positioning.motion_commander import MotionCommander
from cflib.crazyflie.syncCrazyflie import SyncCrazyflie
from cflib.crazyflie.syncLogger import SyncLogger

cflib.crtp.init_drivers()
available = cflib.crtp.scan_interfaces()
    
crazyflie = Crazyflie()
#crazyflie.connected.add_callback(crazyflie_connected)
if(len(available) > 0):

    lg_stab = LogConfig(name="Stabilizer", period_in_ms=10)
    lg_stab.add_variable('stabilizer.roll', 'float')
    
    with SyncCrazyflie(available[0][0]) as scf:
        with SyncLogger(scf, lg_stab) as logger:
            with MotionCommander(scf) as UAV:
                print("WAITING")                
                time.sleep(5)
                #        UAV.up(1, 0.2)
                #        time.sleep(1)
                #        UAV.down(1, 0.2)
                endTime = time.time() + 5
                for log_entry in logger:
                    print(log_entry[1])
                
    pass
else:
    print("ERROR: Unable to find anything")


